openapi: 3.0.0
info:
  title: Student Management APIs
  description: Student Management System
  version: 1.0.1
  contact:
    email: sonijayesh12345@gmail.com
    url: "https://thejayeshsoni.github.io"

servers:
  - url: "{protocol}://{url}"
    description: for local host - regular
    variables:
      url:
        enum:
          - localhost:3000
          - student-management-webapps.herokuapp.com
        default: student-management-webapps.herokuapp.com
      protocol:
        enum:
          - http
          - https
        default: https

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    cookieAuth: # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: token # cookie name

paths:
  /admin/signup:
    post:
      tags:
        - Admin
      summary: signup a new user. required files are - firstName, lastName, email, password and phone
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - password
                - phone
              properties:
                firstName:
                  type: string
                  required: true
                lastName:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                phone:
                  type: number
                  required: true
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      phone:
                        type: number
                      _id:
                        type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
        400:
          description: Bad request
        500:
          description: internal server error

  /admin/login:
    post:
      tags:
        - Admin
      summary: login a new user. required files are -  email and password. Also adds httpOnly cookie in browser. It sends token in response too.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      phone:
                        type: number
                      _id:
                        type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
        400:
          description: Bad request
        500:
          description: internal server error

  /admin/logout:
    get:
      tags:
        - Admin
      summary: get request to logout the user. Also removes httpOnly cookies
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

        400:
          description: Bad request
        500:
          description: internal server error

  /admin/me:
    get:
      tags:
        - Admin
      summary: If user is admin, response will get array of all users
      requestBody:

      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      phone:
                        type: number
                      _id:
                        type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string

        400:
          description: Bad request
        500:
          description: internal server error

  /admin/addStudent:
    post:
      tags:
        - Admin
      summary: If user is Admin, then add a student
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - password
                - phone
                - address
              properties:
                firstName:
                  type: string
                  required: true
                lastName:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                results:
                  type: array
                  items:
                    type: object
                    properties:
                      subject:
                        type: string
                      marks:
                        type: number
                address:
                  type: string
                phone:
                  type: number
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      firstName:
                        type: string
                        required: true
                      lastName:
                        type: string
                        required: true
                      email:
                        type: string
                        required: true
                      password:
                        type: string
                        required: true
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            subject:
                              type: string
                            marks:
                              type: number
                      address:
                        type: string
                      phone:
                        type: number
                      _id:
                        type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
        400:
          description: Bad request
        500:
          description: internal server error

  # Student's endpoints
  /student/login:
    post:
      tags:
        - Student
      summary: login Student. required files are -  email and password. Also adds httpOnly cookie in browser. It sends token in response too.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            subject:
                              type: string
                            marks:
                              type: number
                        example:
                          - subject: "English"
                            marks: 99
                      role:
                        type: string
                      phone:
                        type: number
                      address:
                        type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
        400:
          description: Bad request
        500:
          description: internal server error
